"use strict";(self.webpackChunknew_website=self.webpackChunknew_website||[]).push([[4056],{44056:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"autotype","title":"Infer","description":"Pyrefly infer feature and documentation","source":"@site/docs/autotype.mdx","sourceDirName":".","slug":"/autotype","permalink":"/en/docs/autotype","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/pyrefly/edit/main/website/docs/autotype.mdx","tags":[],"version":"current","frontMatter":{"title":"Infer","description":"Pyrefly infer feature and documentation"},"sidebar":"docsSidebar","previous":{"title":"Import Resolution","permalink":"/en/docs/import-resolution"}}');var i=t(74848),o=t(28453);const a={title:"Infer",description:"Pyrefly infer feature and documentation"},s="Pyrefly Infer",d={},c=[{value:"Usage",id:"usage",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"pyrefly-infer",children:"Pyrefly Infer"})}),"\n",(0,i.jsx)(n.p,{children:"Manually adding type annotations to your code can be tedius and time-consuming. Pyrefly can help with this task by automatically adding type annotations to your code."}),"\n",(0,i.jsxs)(n.p,{children:["This feature is currently under active development, and the following sections will be updated as the feature matures. We currently recommend manually reviewing the changes created by ",(0,i.jsx)(n.code,{children:"pyrefly infer"})]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:"To use the infer feature, run the following command in your project directory:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"pyrefly infer path/to/file.py\n# or\npyrefly infer path/to/directory/\n"})}),"\n",(0,i.jsx)(n.p,{children:"We recommend running it in small batches to make reviewing and merging changes easier. Flags can be used to turn on / off adding annotations for parameters, return types, and containers."}),"\n",(0,i.jsx)(n.p,{children:"It is common that new annotations will expose new type errors. See our error suppression guides to learn how to automate silencing these errors."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);